<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ import namespace="System.IO" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Alchemy
{
    static partial class AlchemyResources
    {
        public static class UI
        {
            private static Dictionary<int, string[]> m_uiresources =
                new Dictionary<int, string[]>();
		
			public static class Indexes
			{
<#
using(StreamReader reader = File.OpenText(Host.ResolvePath(@"Data\UIIndexes.txt")))
{
	string line = null;
	int index = 0;
	while((line = reader.ReadLine()) != null)
	{
#>
				public const int <#=line#> = <#=index#>;
<#
		index++;
	}
}
#>			
			}
			
			#region properties
<#
using(StreamReader reader = File.OpenText(Host.ResolvePath(@"Data\UIIndexes.txt")))
{
	string line = null;
	while((line = reader.ReadLine()) != null)
	{
#>
			public static string <#= line #> { get { return m_uiresources[Languages.CurrentLanguage][Indexes.<#= line #>];}}
<#
	}
}
#>
			#endregion
				
            static UI()
            {
<#
string [] filenames = Directory.GetFiles(Host.ResolvePath(@"Data\UI"));
foreach(string filename in filenames)
{
	FileInfo fi = new FileInfo(filename);
	string name = fi.Name.Replace(fi.Extension, string.Empty);
#>				m_uiresources[Languages.Indexes.<#=name#>] = new string[]
				{
<#
	using(StreamReader reader = fi.OpenText())
	{
		string line = null;
		while((line = reader.ReadLine()) != null)
		{
			string [] split = line.Split(new char[]{'='});
			if(split != null && split.Length == 2)
			{
#>					"<#=split[1]#>",
<#
			}
		}
	}
#>
				};
				
<#
}
#>			
			}
		}
	}
}